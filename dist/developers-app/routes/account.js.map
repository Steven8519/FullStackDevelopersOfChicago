{"version":3,"sources":["../../../developers-app/routes/account.js"],"names":["express","require","router","Router","UserController","bcrypt","get","request","response","next","action","params","session","reset","json","confirmation","message","user","userId","getById","then","catch","error","post","body","id","email","users","length","password","passwordCorrect","compareSync","_id","profile","summary","module","exports"],"mappings":";;AAAA;;;AAGA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,iBAAiBH,QAAQ,+BAAR,CAAvB;AACA,IAAMI,SAASJ,QAAQ,UAAR,CAAf;;AAEAC,OAAOI,GAAP,CAAW,UAAX,EAAuB,UAASC,OAAT,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAiC;AACpD,QAAMC,SAASH,QAAQI,MAAR,CAAeD,MAA9B;;AAEA,QAAIA,UAAU,QAAd,EAAuB;AACnBH,gBAAQK,OAAR,CAAgBC,KAAhB;AACAL,iBAASM,IAAT,CAAc;AACVC,0BAAc;AADJ,SAAd;AAGH;;AAED,QAAIL,UAAU,aAAd,EAA4B;AAAE;AAC1B,YAAIH,QAAQK,OAAR,IAAmB,IAAvB,EAA4B;AACxBJ,qBAASM,IAAT,CAAc;AACVC,8BAAc,OADJ;AAEVC,yBAAS;AAFC,aAAd;AAIH,SALD,MAKO,IAAIT,QAAQK,OAAR,CAAgBK,IAAhB,IAAwB,IAA5B,EAAiC;AACpCT,qBAASM,IAAT,CAAc;AACVC,8BAAc,OADJ;AAEVC,yBAAS;AAFC,aAAd;AAIH,SALM,MAKA;;AAEH,gBAAME,SAASX,QAAQK,OAAR,CAAgBK,IAA/B;AACAb,2BAAee,OAAf,CAAuBD,MAAvB,EACKE,IADL,CACU,UAAUH,IAAV,EAAgB;AAClBT,yBAASM,IAAT,CAAc;AACVC,kCAAc,SADJ;AAEVE,0BAAMA;AAFI,iBAAd;AAIH,aANL,EAOKI,KAPL,CAOW,UAAUC,KAAV,EAAiB;AACpBd,yBAASM,IAAT,CAAc;AACVC,kCAAc,OADJ;AAEVC,6BAASM;AAFC,iBAAd;AAIH,aAZL;AAaC;AACJ;AACJ,CAvCL;;AAyCApB,OAAOqB,IAAP,CAAY,UAAZ,EAAwB,UAAShB,OAAT,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAiC;AACrD,QAAMC,SAASH,QAAQI,MAAR,CAAeD,MAA9B;;AAEA,QAAIA,UAAU,UAAd,EAAyB;AACrBN,uBAAemB,IAAf,CAAoBhB,QAAQiB,IAA5B,EACKJ,IADL,CACU,UAASH,IAAT,EAAc;;AAEhBV,oBAAQK,OAAR,CAAgBK,IAAhB,GAAuBA,KAAKQ,EAA5B;AACAjB,qBAASM,IAAT,CAAc;AACVC,8BAAc,SADJ;AAEVE,sBAAMA;AAFI,aAAd;AAIH,SARL,EASKI,KATL,CASW,UAASC,KAAT,EAAe;AAClBd,qBAASM,IAAT,CAAc;AACVC,8BAAa,OADH;AAEVC,yBAASM;AAFC,aAAd;AAIH,SAdL;AAeH;;AAGD,QAAIZ,UAAU,OAAd,EAAsB;AAClB,YAAMgB,QAAQnB,QAAQiB,IAAR,CAAaE,KAA3B;AACAtB,uBAAeE,GAAf,CAAmB,EAACoB,OAAMA,KAAP,EAAnB,EAAkC,IAAlC,EACKN,IADL,CACU,UAASO,KAAT,EAAe;AACjB,gBAAIA,MAAMC,MAAN,IAAgB,CAApB,EAAsB;AAClBpB,yBAASM,IAAT,CAAc;AACVC,kCAAa,OADH;AAEVC,6BAAQ;AAFE,iBAAd;;AAKA;AACH;;AAED,gBAAMC,OAAOU,MAAM,CAAN,CAAb;AACA,gBAAME,WAAWtB,QAAQiB,IAAR,CAAaK,QAA9B;;AAEA;AACA,gBAAMC,kBAAkBzB,OAAO0B,WAAP,CAAmBF,QAAnB,EAA6BZ,KAAKY,QAAlC,CAAxB;AACA,gBAAIC,mBAAmB,KAAvB,EAA6B;AACzBtB,yBAASM,IAAT,CAAc;AACVC,kCAAa,OADH;AAEVC,6BAAQ;AAFE,iBAAd;;AAKA;AACH;;AAEDT,oBAAQK,OAAR,CAAgBK,IAAhB,GAAuBA,KAAKe,GAA5B;;AAEAxB,qBAASM,IAAT,CAAc;AACVC,8BAAc,SADJ;AAEVkB,yBAAShB,KAAKiB,OAAL;AAFC,aAAd;AAKH,SAhCL,EAiCKb,KAjCL,CAiCW,UAASC,KAAT,EAAe;AAClBd,qBAASM,IAAT,CAAc;AACVC,8BAAa,OADH;AAEVC,yBAASM;AAFC,aAAd;AAIH,SAtCL;AAuCC;AACR,CAhED;;AAkEAa,OAAOC,OAAP,GAAiBlC,MAAjB","file":"account.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/8/17.\n */\nconst express = require(\"express\");\nconst router = express.Router();\nconst UserController = require(\"../controllers/UserController\");\nconst bcrypt = require(\"bcryptjs\");\n\nrouter.get(\"/:action\", function(request, response, next){\n    const action = request.params.action;\n\n    if (action == \"logout\"){\n        request.session.reset();\n        response.json({\n            confirmation: \"success\"\n        });\n    }\n\n    if (action == \"currentuser\"){ // check if user logged in\n        if (request.session == null){\n            response.json({\n                confirmation: \"Error\",\n                message: \"User not logged in\"\n            });\n        } else if (request.session.user == null){\n            response.json({\n                confirmation: \"Error\",\n                message: \"User not logged in\"\n            });\n        } else {\n\n            const userId = request.session.user;\n            UserController.getById(userId)\n                .then(function (user) {\n                    response.json({\n                        confirmation: \"success\",\n                        user: user\n                    });\n                })\n                .catch(function (error) {\n                    response.json({\n                        confirmation: \"Error\",\n                        message: error\n                    });\n                });\n            }\n        }\n    });\n\nrouter.post(\"/:action\", function(request, response, next){\n    const action = request.params.action;\n\n    if (action == \"register\"){\n        UserController.post(request.body)\n            .then(function(user){\n\n                request.session.user = user.id;\n                response.json({\n                    confirmation: \"success\",\n                    user: user\n                });\n            })\n            .catch(function(error){\n                response.json({\n                    confirmation:\"Error\",\n                    message: error\n                });\n            });\n    }\n\n\n    if (action == \"login\"){\n        const email = request.body.email;\n        UserController.get({email:email}, true)\n            .then(function(users){\n                if (users.length == 0){\n                    response.json({\n                        confirmation:\"Error\",\n                        message:\"User does not exist\"\n                    });\n\n                    return\n                }\n\n                const user = users[0];\n                const password = request.body.password;\n\n                // Check password\n                const passwordCorrect = bcrypt.compareSync(password, user.password);\n                if (passwordCorrect == false){\n                    response.json({\n                        confirmation:'Error',\n                        message:\"Incorrect Password\"\n                    });\n\n                    return\n                }\n\n                request.session.user = user._id;\n\n                response.json({\n                    confirmation: \"success\",\n                    profile: user.summary()\n                });\n\n            })\n            .catch(function(error){\n                response.json({\n                    confirmation:\"Error\",\n                    message: error\n                });\n            });\n        }\n});\n\nmodule.exports = router;\n"]}