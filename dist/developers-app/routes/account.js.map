{"version":3,"sources":["../../../developers-app/routes/account.js"],"names":["express","require","router","Router","UserController","bcrypt","post","request","response","next","action","params","email","body","get","then","users","length","json","conformation","message","user","password","passwordCheck","compareSync","catch","module","exports"],"mappings":";;AAAA;;;AAGA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,iBAAiBH,QAAQ,+BAAR,CAAvB;AACA,IAAMI,SAASJ,QAAQ,UAAR,CAAf;;AAEAC,OAAOI,IAAP,CAAY,UAAZ,EAAwB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACvD,QAAMC,SAASH,QAAQI,MAAR,CAAeD,MAA9B;;AAEI,QAAGA,UAAU,OAAb,EAAsB;AAClB,YAAOE,QAAQL,QAAQM,IAAR,CAAaD,KAA5B;AACAR,uBAAeU,GAAf,CAAmB,EAAEF,OAAOA,KAAT,EAAnB,EAAoC,IAApC,EACKG,IADL,CACU,UAAUC,KAAV,EAAiB;AACnB,gBAAIA,MAAMC,MAAN,IAAgB,CAApB,EAAuB;AACnBT,yBAASU,IAAT,CAAc;AACVC,kCAAc,OADJ;AAEVC,6BAAS;AAFC,iBAAd;AAIH,aALD,MAKO;AACH,oBAAMC,OAAOL,MAAM,CAAN,CAAb;AACA,oBAAMM,WAAWf,QAAQM,IAAR,CAAaS,QAA9B;;AAEA;AACA,oBAAMC,gBAAgBlB,OAAOmB,WAAP,CAAmBF,QAAnB,EAA6BD,KAAKC,QAAlC,CAAtB;AACA,oBAAGC,iBAAiB,KAApB,EAA2B;AACvBf,6BAASU,IAAT,CAAc;AACVC,sCAAc,OADJ;AAEVC,iCAAQ;AAFE,qBAAd;AAIH;;AAEDZ,yBAASU,IAAT,CAAc;AACVC,kCAAc,SADJ;AAEVE,0BAAMA;AAFI,iBAAd;AAIH;AACJ,SAzBL,EA0BKI,KA1BL;AA2BH;AACR,CAjCD;;AAmCAC,OAAOC,OAAP,GAAiBzB,MAAjB","file":"account.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/8/17.\n */\nconst express = require(\"express\");\nconst router = express.Router();\nconst UserController = require(\"../controllers/UserController\");\nconst bcrypt = require(\"bcryptjs\");\n\nrouter.post(\"/:action\", function (request, response, next) {\n    const action = request.params.action;\n\n        if(action == \"login\") {\n            const  email = request.body.email;\n            UserController.get({ email: email}, true)\n                .then(function (users) {\n                    if (users.length == 0) {\n                        response.json({\n                            conformation: \"Error\",\n                            message: \"No such user\"\n                        });\n                    } else {\n                        const user = users[0];\n                        const password = request.body.password;\n\n                        // Check password\n                        const passwordCheck = bcrypt.compareSync(password, user.password);\n                        if(passwordCheck == false) {\n                            response.json({\n                                conformation: \"Error\",\n                                message:\"Incorrect Password.\"\n                            })\n                        }\n\n                        response.json({\n                            conformation: \"success\",\n                            user: user\n                        });\n                    }\n                })\n                .catch();\n        }\n});\n\nmodule.exports = router;\n"]}