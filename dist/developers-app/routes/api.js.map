{"version":3,"sources":["../../../developers-app/routes/api.js"],"names":["express","require","router","Router","controllers","get","request","response","next","resource","params","controller","json","conformation","then","results","catch","error","id","getById","post","body","put","message","module","exports"],"mappings":"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","file":"api.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/6/17.\n */\nconst express = require(\"express\");\nconst router = express.Router();\nconst controllers = require(\"../controllers/index\");\n\nrouter.get(\"/:resource\", function (request, response, next) {\n    const resource = request.params.resource;\n    const controller = controllers[resource];\n\n    if(controller == null) {\n        response.json({\n            conformation: \"Error\",\n        });\n    }\n    controller.get(null, false).then(function (results) {\n            response.json({\n                conformation: \"success\",\n                results: results\n            });\n        }).catch(function (error) {\n            response.json({\n                conformation: \"Error\",\n                results: error\n            });\n        });\n    });\n\nrouter.get(\"/:resource/:id\", function (request, response, next) {\n    const resource = request.params.resource;\n    const id = request.params.id;\n\n    const controller = controllers[resource];\n\n    if(controller == null) {\n        response.json({\n            conformation: \"Error\",\n        });\n    }\n    controller.getById(id)\n        .then(function (results) {\n        response.json({\n            conformation: \"success\",\n            results: results\n        });\n    }).catch(function (error) {\n        response.json({\n            conformation: \"Error\",\n            results: error\n        });\n    });\n});\n\nrouter.post(\"/:resource\", function (request, response, next) {\n    const resource = request.params.resource;\n\n    const controller = controllers[resource];\n    if(controller == null) {\n        response.json({\n            conformation: \"Error\",\n        });\n    }\n    controller.post(request.body)\n        .then(function (results) {\n            response.json({\n                conformation: \"success\",\n                results: results\n            });\n        }).catch(function (error) {\n        response.json({\n            conformation: \"Error\",\n            results: error\n        });\n    });\n});\n\nrouter.put(\"/:resource/:id\", function (request, response, next) {\n   const resource = request.params.resource;\n   const id = request.params.id;\n\n    const controller = controllers[resource];\n    if(controller == null) {\n        response.json({\n            conformation: \"Error\",\n            message: \"File does not exist\"\n        });\n    }\n    controller.put(id, request.body)\n        .then(function (results) {\n            response.json({\n                conformation: \"success\",\n                results: results\n            });\n        }).catch(function (error) {\n        response.json({\n            conformation: \"Error\",\n            results: error\n        });\n    });\n});\n\nmodule.exports = router;\n"]}