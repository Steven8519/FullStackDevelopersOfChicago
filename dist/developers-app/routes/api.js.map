{"version":3,"sources":["../../../developers-app/routes/api.js"],"names":["express","require","router","Router","User","get","request","response","next","resource","params","find","error","results","json","conformation","message","id","_id","findById","result","post","create","body","module","exports"],"mappings":";;AAAA;;;AAGA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,OAAOH,QAAQ,gBAAR,CAAb;;AAEAC,OAAOG,GAAP,CAAW,YAAX,EAAyB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACxD,QAAMC,WAAWH,QAAQI,MAAR,CAAeD,QAAhC;AACA,QAAIA,YAAY,MAAhB,EAAwB;AACpBL,aAAKO,IAAL,CAAU,IAAV,EAAgB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACtC,gBAAID,KAAJ,EAAW;AACPL,yBAASO,IAAT,CAAc;AACVC,kCAAc,OADJ;AAEVC,6BAASJ;AAFC,iBAAd;AAIA;AACH;;AAEDL,qBAASO,IAAT,CAAc;AACVC,8BAAc,SADJ;AAEVF,yBAASA;AAFC,aAAd;AAIH,SAbD;AAcH;AACJ,CAlBD;;AAoBAX,OAAOG,GAAP,CAAW,gBAAX,EAA6B,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAC7D,QAAMC,WAAWH,QAAQI,MAAR,CAAeD,QAAhC;AACA,QAAMQ,KAAKX,QAAQI,MAAR,CAAeQ,GAA1B;;AAEA,QAAGT,YAAY,MAAf,EAAuB;AACnBL,aAAKe,QAAL,CAAcF,EAAd,EAAkB,UAAUL,KAAV,EAAiBQ,MAAjB,EAAyB;AACxC,gBAAGR,KAAH,EAAU;AACNL,yBAASO,IAAT,CAAc;AACVC,kCAAc,OADJ;AAEVK,4BAAQA;AAFE,iBAAd;AAIA;AACH;AACDb,qBAASO,IAAT,CAAc;AACVC,8BAAc,SADJ;AAEVK,wBAAQA;AAFE,aAAd;AAIF,SAZD;AAaH;AACH,CAnBD;;AAqBAlB,OAAOmB,IAAP,CAAY,YAAZ,EAA0B,UAAUf,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACzD,QAAMC,WAAWH,QAAQI,MAAR,CAAeD,QAAhC;AACA,QAAGA,YAAY,MAAf,EAAuB;AACnBL,aAAKkB,MAAL,CAAYhB,QAAQiB,IAApB,EAA0B,UAAUX,KAAV,EAAiBQ,MAAjB,EAAyB;AAC/C,gBAAGR,KAAH,EAAU;AACNL,yBAASO,IAAT,CAAc;AACVC,kCAAc,OADJ;AAEVC,6BAASI;AAFC,iBAAd;AAIA;AACH;AACDb,qBAASO,IAAT,CAAc;AACVC,8BAAc,SADJ;AAEVK,wBAAQA;AAFE,aAAd;AAIH,SAZD;AAaH;AACJ,CAjBD;;AAmBAI,OAAOC,OAAP,GAAiBvB,MAAjB","file":"api.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/6/17.\n */\nconst express = require(\"express\");\nconst router = express.Router();\nconst User = require(\"../models/user\");\n\nrouter.get(\"/:resource\", function (request, response, next) {\n    const resource = request.params.resource;\n    if (resource == \"user\") {\n        User.find(null, function (error, results) {\n            if (error) {\n                response.json({\n                    conformation: \"Error\",\n                    message: error\n                });\n                return\n            }\n\n            response.json({\n                conformation: \"success\",\n                results: results\n            });\n        });\n    }\n});\n\nrouter.get(\"/:resource/:id\", function (request, response, next) {\n   const resource = request.params.resource;\n   const id = request.params._id;\n\n   if(resource == \"user\") {\n       User.findById(id, function (error, result) {\n          if(error) {\n              response.json({\n                  conformation: \"Error\",\n                  result: result\n              });\n              return\n          }\n          response.json({\n              conformation: \"success\",\n              result: result\n          });\n       });\n   }\n});\n\nrouter.post(\"/:resource\", function (request, response, next) {\n    const resource = request.params.resource;\n    if(resource == \"user\") {\n        User.create(request.body, function (error, result) {\n            if(error) {\n                response.json({\n                    conformation: \"Error\",\n                    message: result\n                });\n                return\n            }\n            response.json({\n                conformation: \"success\",\n                result: result\n            });\n        });\n    }\n});\n\nmodule.exports = router;\n"]}