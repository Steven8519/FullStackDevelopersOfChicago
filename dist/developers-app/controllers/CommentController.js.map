{"version":3,"sources":["../../../developers-app/controllers/CommentController.js"],"names":["Comment","require","Promise","module","exports","get","params","resolve","reject","find","error","comments","getById","id","findById","comment","post","create","put","findByIdAndUpdate","new"],"mappings":";;AAAA;;;AAGA,IAAMA,UAAUC,QAAQ,mBAAR,CAAhB;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;;AAEAE,OAAOC,OAAP,GAAiB;AACbC,SAAK,aAAUC,MAAV,EAAkB;AACnB,eAAO,IAAIJ,OAAJ,CAAY,UAAUK,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C;;AACAR,oBAAQS,IAAR,CAAaH,MAAb,EAAqB,UAAUI,KAAV,EAAiBC,QAAjB,EAA2B;AAC5C,oBAAID,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQI,QAAR;AACH;AACJ,aAND;AAOH,SATM,CAAP;AAUH,KAZY;;AAcbC,aAAS,iBAAUC,EAAV,EAAc;AACnB,eAAO,IAAIX,OAAJ,CAAY,UAASK,OAAT,EAAkBC,MAAlB,EAA0B;AACxCR,oBAAQc,QAAR,CAAiBD,EAAjB,EAAqB,UAAUH,KAAV,EAAiBK,OAAjB,EAA0B;AAC5C,oBAAIL,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,OAAR;AACH;AACJ,aANA;AAOJ,SARM,CAAP;AASH,KAxBY;;AA0BbC,UAAM,cAAUV,MAAV,EAAkB;AACpB,eAAO,IAAIJ,OAAJ,CAAY,UAAUK,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CR,oBAAQiB,MAAR,CAAeX,MAAf,EAAuB,UAAUI,KAAV,EAAiBK,OAAjB,EAA0B;AAC7C,oBAAIL,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,OAAR;AACH;AACJ,aAND;AAOH,SARM,CAAP;AASH,KApCY;;AAsCbG,SAAK,eAAY;AACb;;AACA,eAAO,IAAIhB,OAAJ,CAAY,UAAUK,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CR,oBAAQmB,iBAAR,CAA0BN,EAA1B,EAA8BP,MAA9B,EAAsC,EAACc,KAAK,IAAN,EAAtC,EAAmD,UAAUV,KAAV,EAAiBK,OAAjB,EAA0B;AACzE,oBAAGL,KAAH,EAAU;AACNF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,OAAR;AACH;AACJ,aAND;AAOH,SARM,CAAP;AASH;AAjDY,CAAjB","file":"CommentController.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/6/17.\n */\nconst Comment = require(\"../models/comment\");\nconst Promise = require(\"bluebird\");\n\nmodule.exports = {\n    get: function (params) {\n        return new Promise(function (resolve, reject) {\n            \"use strict\";\n            Comment.find(params, function (error, comments) {\n                if (error) {\n                    reject(error)\n                } else {\n                    resolve(comments);\n                }\n            });\n        });\n    },\n\n    getById: function (id) {\n        return new Promise(function(resolve, reject) {\n             Comment.findById(id, function (error, comment) {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(comment);\n                }\n            });\n        });\n    },\n\n    post: function (params) {\n        return new Promise(function (resolve, reject) {\n            Comment.create(params, function (error, comment) {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(comment);\n                }\n            });\n        });\n    },\n\n    put: function () {\n        \"use strict\";\n        return new Promise(function (resolve, reject) {\n            Comment.findByIdAndUpdate(id, params, {new: true}, function (error, comment) {\n                if(error) {\n                    reject(error);\n                } else {\n                    resolve(comment);\n                }\n            });\n        });\n    }\n};"]}