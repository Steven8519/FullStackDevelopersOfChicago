{"version":3,"sources":["../../../developers-app/controllers/UserController.js"],"names":["User","require","Promise","bcrypt","module","exports","get","params","resolve","reject","find","error","users","list","i","length","user","push","summary","getById","id","findById","post","password","hashSync","create","put","findByIdAndUpdate","new"],"mappings":";;AAAA;;;AAGA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;AACA,IAAME,SAASF,QAAQ,UAAR,CAAf;;AAEAG,OAAOC,OAAP,GAAiB;AACbC,SAAK,aAAUC,MAAV,EAAkB;AACnB,eAAO,IAAIL,OAAJ,CAAY,UAAUM,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C;;AACAT,iBAAKU,IAAL,CAAUH,MAAV,EAAkB,UAAUI,KAAV,EAAiBC,KAAjB,EAAwB;AACtC,oBAAID,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACH,wBAAIE,OAAO,EAAX;AACA,yBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIF,MAAMG,MAAzB,EAAiCD,GAAjC,EAAsC;AAClC,4BAAIE,OAAOJ,MAAME,CAAN,CAAX;AACAD,6BAAKI,IAAL,CAAUD,KAAKE,OAAL,EAAV;AACH;AACDV,4BAAQK,IAAR;AACH;AACJ,aAXD;AAYH,SAdM,CAAP;AAeH,KAjBY;;AAmBbM,aAAS,iBAAUC,EAAV,EAAc;AACf,eAAO,IAAIlB,OAAJ,CAAY,UAASM,OAAT,EAAkBC,MAAlB,EAA0B;AAC7CT,iBAAKqB,QAAL,CAAcD,EAAd,EAAkB,UAAUT,KAAV,EAAiBK,IAAjB,EAAuB;AACrC,oBAAIL,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,KAAKE,OAAL,EAAR;AACH;AACJ,aAND;AAQH,SATU,CAAP;AAUP,KA9BY;AA+BbI,UAAM,cAAUf,MAAV,EAAkB;AACpB,eAAO,IAAIL,OAAJ,CAAY,UAAUM,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,gBAAMc,WAAWhB,OAAOgB,QAAxB;AACAhB,mBAAO,UAAP,IAAqBJ,OAAOqB,QAAP,CAAgBD,QAAhB,EAA0B,EAA1B,CAArB;AACAvB,iBAAKyB,MAAL,CAAYlB,MAAZ,EAAoB,UAAUI,KAAV,EAAiBK,IAAjB,EAAuB;AACvC,oBAAIL,KAAJ,EAAW;AACPF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,KAAKE,OAAL,EAAR;AACH;AACJ,aAND;AAOH,SAVM,CAAP;AAWH,KA3CY;;AA6CbQ,SAAK,aAAUN,EAAV,EAAcb,MAAd,EAAsB;AACvB,eAAO,IAAIL,OAAJ,CAAY,UAAUM,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CT,iBAAK2B,iBAAL,CAAuBP,EAAvB,EAA2Bb,MAA3B,EAAmC,EAACqB,KAAK,IAAN,EAAnC,EAAgD,UAAUjB,KAAV,EAAiBK,IAAjB,EAAuB;AACnE,oBAAGL,KAAH,EAAU;AACNF,2BAAOE,KAAP;AACH,iBAFD,MAEO;AACHH,4BAAQQ,KAAKE,OAAL,EAAR;AACH;AACJ,aAND;AAOH,SARM,CAAP;AASH;AAvDY,CAAjB","file":"UserController.js","sourcesContent":["/**\n * Created by stevenmcdonald on 3/6/17.\n */\nconst User = require(\"../models/user\");\nconst Promise = require(\"bluebird\");\nconst bcrypt = require(\"bcryptjs\");\n\nmodule.exports = {\n    get: function (params) {\n        return new Promise(function (resolve, reject) {\n            \"use strict\";\n            User.find(params, function (error, users) {\n                if (error) {\n                    reject(error)\n                } else {\n                    var list = [];\n                    for(var i = 0; i < users.length; i++) {\n                        let user = users[i];\n                        list.push(user.summary());\n                    }\n                    resolve(list);\n                }\n            });\n        });\n    },\n\n    getById: function (id) {\n            return new Promise(function(resolve, reject) {\n            User.findById(id, function (error, user) {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(user.summary());\n                }\n            });\n\n        });\n    },\n    post: function (params) {\n        return new Promise(function (resolve, reject) {\n            const password = params.password;\n            params[\"password\"] = bcrypt.hashSync(password, 10);\n            User.create(params, function (error, user) {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(user.summary());\n                }\n            });\n        });\n    },\n\n    put: function (id, params) {\n        return new Promise(function (resolve, reject) {\n            User.findByIdAndUpdate(id, params, {new: true}, function (error, user) {\n                if(error) {\n                    reject(error);\n                } else {\n                    resolve(user.summary());\n                }\n            });\n        });\n    }\n};\n"]}