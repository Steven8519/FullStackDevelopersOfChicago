{"version":3,"sources":["../../developers-app/app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","mongoose","sessions","routes","api","account","databaseUrl","connect","error","response","console","log","app","set","join","__dirname","use","json","urlencoded","extended","cookieName","secret","duration","activeDuration","static","req","res","next","err","Error","status","get","render","message","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,eAAR,CAAhB;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,eAAeJ,QAAQ,eAAR,CAArB;AACA,IAAMK,aAAaL,QAAQ,aAAR,CAAnB;AACA,IAAMM,WAAWN,QAAQ,UAAR,CAAjB;AACA,IAAMO,WAAWP,QAAQ,iBAAR,CAAjB;;AAEA,IAAMQ,SAASR,QAAQ,gBAAR,CAAf;AACA,IAAMS,MAAMT,QAAQ,cAAR,CAAZ;AACA,IAAMU,UAAUV,QAAQ,kBAAR,CAAhB;;AAEA,IAAMW,cAAc,gCAApB;AACAL,SAASM,OAAT,CAAiBD,WAAjB,EAA8B,UAASE,KAAT,EAAgBC,QAAhB,EAAyB;AACrD,MAAID,KAAJ,EAAU;AACRE,YAAQC,GAAR,CAAY,8CAA6CH,KAAzD;AACD,GAFD,MAGI;AACFE,YAAQC,GAAR,CAAY,4BAA2BL,WAAvC;AACD;AAEF,CARD;;AAUA,IAAMM,MAAMlB,SAAZ;;AAEA;AACAkB,IAAIC,GAAJ,CAAQ,OAAR,EAAiBjB,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACA;AACAD,IAAII,GAAJ,CAAQlB,OAAO,KAAP,CAAR;AACAc,IAAII,GAAJ,CAAQhB,WAAWiB,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQhB,WAAWkB,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQjB,cAAR;;AAEA;AACAa,IAAII,GAAJ,CAAQd,SAAS;AACfkB,cAAY,SADG;AAEbC,UAAQ,eAFK,EAEY;AACzBC,YAAU,KAAG,EAAH,GAAM,EAAN,GAAS,IAHN;AAIbC,kBAAgB,KAAG,EAAH,GAAM;AAJT,CAAT,CAAR;AAMAX,IAAII,GAAJ,CAAQtB,QAAQ8B,MAAR,CAAe5B,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAH,IAAII,GAAJ,CAAQ,GAAR,EAAab,MAAb;AACAS,IAAII,GAAJ,CAAQ,MAAR,EAAgBZ,GAAhB;AACAQ,IAAII,GAAJ,CAAQ,UAAR,EAAoBX,OAApB;;AAEA;AACAO,IAAII,GAAJ,CAAQ,UAASS,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;;AAEA;AACA;AACA,IAAIhB,IAAImB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCnB,MAAII,GAAJ,CAAQ,UAASY,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpCD,QAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,QAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,eAASL,IAAIK,OADK;AAElBzB,aAAOoB;AAFW,KAApB;AAID,GAND;AAOD;;AAED;AACA;AACAhB,IAAII,GAAJ,CAAQ,UAASY,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpCD,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,aAASL,IAAIK,OADK;AAElBzB,WAAO;AAFW,GAApB;AAID,CAND;;AASA0B,OAAOC,OAAP,GAAiBvB,GAAjB","file":"app.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst sessions = require(\"client-sessions\");\n\nconst routes = require('./routes/index');\nconst api = require('./routes/api');\nconst account = require(\"./routes/account\");\n\nconst databaseUrl = 'mongodb://localhost/developers';\nmongoose.connect(databaseUrl, function(error, response){\n  if (error){\n    console.log('Connection to database was unsuccessful: '+ error)\n  }\n  else{\n    console.log('DB CONNECTION SUCCESS: '+ databaseUrl)\n  }\n\n});\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n// Create a logging session for the user.\napp.use(sessions({\n  cookieName: \"session\",\n    secret: \"ajajfjwfajwej\", //1 day session.\n    duration: 20*60*60*1000,\n    activeDuration: 30*60*1000\n}));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/api', api);\napp.use(\"/account\", account);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n"]}